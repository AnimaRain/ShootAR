# To learn more about .editorconfig see https://aka.ms/editorconfigdocs

[*] 
indent_style = tab

[*.{cs,csx}] 
indent_size = 4
trim_trailing_whitespace = true
insert_final_newline = true
charset = utf-8-bom
max_line_length = 80

[*.cs]
##
# C# Coding Conventions
#
# this. preferences 
dotnet_style_qualification_for_field = false:silent 
dotnet_style_qualification_for_property = false:silent 
dotnet_style_qualification_for_method = false:silent 
dotnet_style_qualification_for_event = false:silent 
# Predefined vs framework type preferences (eg int or Int32)
dotnet_style_predefined_type_for_locals_parameters_members = true:silent 
dotnet_style_predefined_type_for_member_access = true:silent 
# var preferences 
csharp_style_var_for_built_in_types = false:silent 
csharp_style_var_when_type_is_apparent = true:silent 
csharp_style_var_elsewhere = false:silent 
# Code block preferences
csharp_prefer_braces = false:silent
dotnet_style_prefer_auto_properties = true:suggestion 
# Parentheses preferences 
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:silent 
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:silent 
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:silent 
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent 
# Expression preferences 
dotnet_style_object_initializer = true:suggestion 
dotnet_style_collection_initializer = true:suggestion 
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion 
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion 
dotnet_style_prefer_conditional_expression_over_assignment = true:silent 
dotnet_style_prefer_conditional_expression_over_return = true:silent 
dotnet_style_explicit_tuple_names = true:warning 
dotnet_prefer_inferred_tuple_names = false:silent 
csharp_prefer_simple_default_expression = true:silent 
dotnet_prefer_inferred_anonymous_type_member_names = true:silent 
csharp_style_pattern_local_over_anonymous_function = false:silent
csharp_style_expression_bodied_methods = when_on_single_line:silent 
csharp_style_expression_bodied_constructors = false:silent 
csharp_style_expression_bodied_operators = when_on_single_line:silent 
csharp_style_expression_bodied_properties = true:silent 
csharp_style_expression_bodied_indexers = true:silent 
csharp_style_expression_bodied_accessors = true:silent
# Variable preferences 
csharp_style_inlined_variable_declaration = true:suggestion 
csharp_style_deconstructed_variable_declaration = true:suggestion
# Null–checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:silent
dotnet_style_coalesce_expression = true:suggestion 
dotnet_style_null_propagation = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion 
# Field preferences 
dotnet_style_require_accessibility_modifiers = always:warning
dotnet_style_readonly_field = true:suggestion 
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion 

## 
# C# Formatting Rules
#
# Organize usings 
dotnet_sort_system_directives_first = false
# Indentation preferences 
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = false
csharp_indent_labels = one_less_than_current
# New line preferences 
csharp_new_line_before_open_brace = types
csharp_new_line_before_else = true
csharp_new_line_before_catch = false
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = false
csharp_new_line_before_members_in_anonymous_types = false
csharp_new_line_between_query_expression_clauses = false
# Space preferences
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_name_and_opening_parenthesis = false 
csharp_space_between_method_call_parameter_list_parentheses = false 
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false 
csharp_space_after_cast = false 
csharp_space_between_method_declaration_parameter_list_parentheses = false 
csharp_space_between_method_call_empty_parameter_list_parentheses = false 
csharp_space_after_keywords_in_control_flow_statements = true 
csharp_space_between_parentheses = false
csharp_space_around_declaration_statements = ignore
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
csharp_space_after_colon_in_inheritance_clause = true 
csharp_space_before_colon_in_inheritance_clause = true 
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after 
# Wrapping preferences 
csharp_preserve_single_line_blocks = true 
csharp_preserve_single_line_statements = true
 
## Naming Conventions
#
# Generic Style Definitions 
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
dotnet_naming_style.camel_case_style.capitalization = camel_case
dotnet_naming_style.capital_case_style.capitalization = all_upper
dotnet_naming_style.capital_case_style.word_separator = _
# Use ALL_CAPITAL_CASE for constant fields.
dotnet_naming_symbols.constant_fields.applicable_kinds = field 
dotnet_naming_symbols.constant_fields.applicable_accessibilities = *
dotnet_naming_symbols.constant_fields.required_modifiers = const 
dotnet_naming_rule.constant_fields_should_be_all_capital_case.symbols = constant_fields 
dotnet_naming_rule.constant_fields_should_be_all_capital_case.severity = suggestion 
dotnet_naming_rule.constant_fields_should_be_all_capital_case.style = capital_case_style
# Use the classic interface convention.
dotnet_naming_style.start_with_I.capitalization = pascal_case
dotnet_naming_style.start_with_I.required_prefix = I
dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_rule.interfaces_must_start_with_I.symbols = interfaces
dotnet_naming_rule.interfaces_must_start_with_I.severity = warning
dotnet_naming_rule.interfaces_must_start_with_I.style = start_with_I
# Use PascalCase for types and non-field members.
dotnet_naming_symbols.uppercased_elements.applicable_kinds = namespace,class,struct,enum,property,method,event,delegate,local_function
dotnet_naming_symbols.uppercased_elements.applicable_accessibilities = *
dotnet_naming_rule.types_and_non_field_members_must_be_pascal_case.symbols = uppercased_elements
dotnet_naming_rule.types_and_non_field_members_must_be_pascal_case.style = pascal_case_style
dotnet_naming_rule.types_and_non_field_members_must_be_pascal_case.severity = error
# Use camelCase for fields, parameters and local variables.
dotnet_naming_symbols.lowercased_elements.applicable_kinds = field,parameter,local
dotnet_naming_symbols.lowercased_elements.applicable_accessibilities = *
dotnet_naming_rule.fields_and_local_variables_must_be_camel_case.symbols = lowercased_elements
dotnet_naming_rule.fields_and_local_variables_must_be_camel_case.style = camel_case_style
dotnet_naming_rule.fields_and_local_variables_must_be_camel_case.severity = error

# Xml files
[*.xml]
indent_size = 2
